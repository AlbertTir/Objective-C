{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red100\green56\blue32;\red196\green26\blue22;
\red170\green13\blue145;\red92\green38\blue153;\red63\green110\blue116;\red46\green13\blue110;\red38\green71\blue75;
}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab560
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 //\cf0 \
\cf2 //  SimpleCar.m\cf0 \
\cf2 //  CarApp\cf0 \
\cf2 //\cf0 \
\cf2 //  Created by Albert Tirtariyadi on 12-03-04.\cf0 \
\cf2 //  Copyright 2012 __MyCompanyName__. All rights reserved.\cf0 \
\cf2 //\cf0 \
\
\cf3 #import \cf4 "SimpleCar.h"\cf3 \
\cf0 \
\cf2 /*\
 here, we need to change the semicolons to curly brackets for our methods\
 */\cf0 \
\cf5 @implementation\cf0  SimpleCar\
\
\cf2 // set methods\cf0 \
- (\cf5 void\cf0 ) setVin:   (\cf6 NSNumber\cf0 *)newVin\{\
	[\cf7 vin\cf0  \cf8 release\cf0 ]; \cf2 //we always release these variables first incase they are already alloc'd\cf0 \
	\cf7 vin\cf0  = [[\cf6 NSNumber\cf0  \cf8 alloc\cf0 ] \cf8 init\cf0 ];\
	\cf7 vin\cf0  = newVin;\
\}\
- (\cf5 void\cf0 ) setMake:  (\cf6 NSString\cf0 *)newMake\{\
	[\cf7 make\cf0  \cf8 release\cf0 ];\
	\cf7 make\cf0  = [[\cf6 NSString\cf0  \cf8 alloc\cf0 ] \cf8 initWithString\cf0 :newMake];\
\}\
- (\cf5 void\cf0 ) setModel: (\cf6 NSString\cf0 *)newModel\{\
	[\cf7 model\cf0  \cf8 release\cf0 ];\
	\cf7 model\cf0  = [[\cf6 NSString\cf0  \cf8 alloc\cf0 ] \cf8 initWithString\cf0 :newModel];\
\}\
\
\cf2 // convenience method\cf0 \
- (\cf5 void\cf0 ) setMake: (\cf6 NSString\cf0 *)newMake\
        andModel: (\cf6 NSString\cf0 *)newModel\{\
	[\cf5 self\cf0  \cf9 setMake\cf0 :newMake];\
	[\cf5 self\cf0  \cf9 setModel\cf0 :newModel];\
\}\
\
\cf2 // get methods\cf0 \
\cf2 /*\
 -these methods are returning the variables we defined in the interface file.\
 -the Method names and variable names are two different things (method vs attributes!)\
 -when we call make (for example), make returns the pointer to an NSString, in this case to the make variable.\
 */\cf0 \
- (\cf6 NSString\cf0 *) make\{\
	\cf5 return\cf0  \cf7 make\cf0 ;\
\}\
- (\cf6 NSString\cf0 *) model\{\
	\cf5 return\cf0  \cf7 model\cf0 ;\
\}\
- (\cf6 NSNumber\cf0 *) vin\{\
	\cf5 return\cf0  \cf7 vin\cf0 ;\
\}\
\
-(\cf5 void\cf0 ) dealloc\{\
	\cf2 //this is to dealloc everything so we don't leak memory\cf0 \
	[\cf7 vin\cf0  \cf8 release\cf0 ];\
	[\cf7 make\cf0  \cf8 release\cf0 ];\
	[\cf7 model\cf0  \cf8 release\cf0 ];\
	[\cf5 super\cf0  \cf8 dealloc\cf0 ];\
\}\
\
\cf5 @end\cf0 \
}