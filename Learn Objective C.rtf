{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red170\green13\blue145;\red92\green38\blue153;\red0\green116\blue0;
}
\margl1440\margr1440\vieww17520\viewh11620\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://mobile.tutsplus.com/tutorials/iphone/learn-objective-c-2/"}}{\fldrslt 
\f0\fs24 \cf0 http://mobile.tutsplus.com/tutorials/iphone/learn-objective-c-2/}}
\f0\fs24 \
\
-in objective C, classes are objects, they are things that are created.\
-within classes, there are methods and attributes\
	--methods are like functions\
	--and attributes are basically variables\
-methods and variables makes up and describes the class, which is the object\
\
-looks like in Day 3's lesson, running things with gcc program.m -o program and running things in xCode is different\
	--will have to learn the compile commands first before doing things in Terminal again\
	--for now, just use xCode\
\
NSObject seems to be the main "variable" type\
	--below this, it branches off to\
		--NSString  -> NSMutableString\
		--NSArray   -> NSMutableArray\
		--NSValue  -> NSNumber\
\
when declaring methods in Obj C, you use - sign and do it before the @end\
	
\f1\fs22 \CocoaLigature0 -(\cf2 void\cf0 ) setVin:		(\cf3 NSNumber\cf0 *)newVin; \cf4 //returns void, takes NSNumber as argument\cf0 \
\pard\tx560\pardeftab560\ql\qnatural\pardirnatural
\cf0 	-(\cf2 void\cf0 ) setMake:	(\cf3 NSString\cf0 *)newMake;\cf4 //returns void, takes NSString as argument
\f0\fs24 \cf0 \CocoaLigature1 \
\
Classes are like toolboxes\
	-interface are like the tools\
	-and implementations are what the tools does\
\
these toolboxes you use to make an "object" or "product". Classes are the stuff you use to make them, and interface and implementations are stuff in classes\
\
}